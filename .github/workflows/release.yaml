name: Release dell csi extensions
# Invocable as a reusable workflow
# Can be manually triggered
on:
  workflow_call: 
  workflow_dispatch:
jobs:
  release-common:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest release tag
        id: get_latest_release_tag
        run: |
          latest_release_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest release tag: $latest_release_tag"
          echo "release_tag=$latest_release_tag" >> $GITHUB_ENV

      - name: Create new common tag
        id: create_common_tag
        run: |
          echo "Creating new tag for common module..."
          latest_release_tag=${{ env.release_tag }}
          IFS='/' read -r _ version <<< "$latest_release_tag"
          IFS='.' read -r major minor patch <<< "$version"
          new_minor=$((minor + 1))
          new_common_tag="common/v$major.$new_minor.0"
          echo "New common tag: $new_common_tag"
          git tag -a $new_common_tag -m "common $new_common_tag"
          git push origin $new_common_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release branch
        run: |
          echo "Creating release branch..."
          latest_release_tag=${{ env.release_tag }}
          IFS='/' read -r _ version <<< "$latest_release_tag"
          IFS='.' read -r major minor patch <<< "$version"
          new_minor=$((minor + 1))
          new_release_branch="release/$major.$new_minor.0"
          echo "New release branch: $new_release_branch"
          git checkout -b $new_release_branch
          git push origin $new_release_branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: common/v${{ env.release_tag }}
          release_name: "Release ${{ env.release_tag }}"
          body: "Release notes for ${{ env.release_tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
