name: Release dell csi extensions
# Invocable as a reusable workflow
# Can be manually triggered
on:
  workflow_call: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (major, minor, patch)'
        required: true
        default: 'none'
jobs:
  create-common-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all tags

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest release tag
        id: get_latest_release_tag
        run: |
          latest_release_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest release tag: $latest_release_tag"
          echo "release_tag=$latest_release_tag" >> $GITHUB_ENV

      - name: Create new common tag
        id: create_common_tag
        run: |
          latest_release_tag=${{ env.release_tag }}
          new_common_tag=$(echo $latest_release_tag | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "New common tag: $new_common_tag"
          git tag -a common/$new_common_tag -s -m "common $new_common_tag"
          git push origin common/$new_common_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # create-pr:
  #   runs-on: ubuntu-latest
  #   needs: create-tag
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Update modules
  #       run: |
  #         modules=("migration" "replication" "volumeGroupSnapshot")
  #         for module in "${modules[@]}"; do
  #           cd $module
  #           go get github.com/dell/dell-csi-extensions/common@${{ steps.create_tag.outputs.new_tag }}
  #           cd ..
  #         done

  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v4
  #       with:
  #         commit-message: 'Update common module to ${{ steps.create_tag.outputs.new_tag }}'
  #         branch: update-common-module
  #         title: 'Update common module to ${{ steps.create_tag.outputs.new_tag }}'
  #         body: 'This PR updates the common module to ${{ steps.create_tag.outputs.new_tag }}.'

  # create-module-tags:
  #   runs-on: ubuntu-latest
  #   needs: create-pr
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Git
  #       run: |
  #         git config --global user.name 'github-actions'
  #         git config --global user.email 'github-actions@github.com'

  #     - name: Get latest tag
  #       id: get_latest_tag
  #       run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

  #     - name: Create new tags for modules
  #       run: |
  #         modules=("migration" "replication" "volumeGroupSnapshot")
  #         for module in "${modules[@]}"; do
  #           latest_tag=${{ steps.get_latest_tag.outputs.tag }}
  #           new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF += 1 ; print}')
  #           git tag -a $module/$new_tag -s -m "$module $new_tag"
  #           git push origin $module/$new_tag
  #         done
  # csm-release:
  #   uses: dell/common-github-actions/.github/workflows/csm-release-libs.yaml@main
  #   name: Release Go Client Libraries
